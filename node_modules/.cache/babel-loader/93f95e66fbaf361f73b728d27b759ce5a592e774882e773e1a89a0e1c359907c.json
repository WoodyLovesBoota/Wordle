{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/woody/Development/React-Project/wordle-typescript/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3;import{styled,keyframes}from\"styled-components\";import{STATUS,answerState}from\"./atoms\";import{useRecoilValue}from\"recoil\";import{faRotateRight}from\"@fortawesome/free-solid-svg-icons\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: rgba(0, 0, 0, 0.9);\\n  top: \",\";\\n  width: 100vw;\\n  height: 100vh;\\n  position: fixed;\\n  transition: top 1s ease-in-out;\\n  color: white;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  h1 {\\n    font-size: 5vw;\\n    margin-bottom: 3vw;\\n  }\\n  div {\\n    display: flex;\\n    span {\\n      font-size: 7.5vw;\\n      width: 7vw;\\n      height: 7vw;\\n      font-weight: 700;\\n      margin-right: 1vw;\\n      background-color: #539165;\\n      text-align: center;\\n      vertical-align: center;\\n    }\\n  }\\n\"])),function(props){return props.result===STATUS.NOT_FINISHED?\"-100vh\":0;});var rotationAni=keyframes(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  0% {transform: rotate(0deg)};\\n  100% {transform: rotate(360deg)};\\n\"])));var Button=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin-top: 4vw;\\n  border: none;\\n  color: white;\\n  background-color: transparent;\\n  cursor: pointer;\\n  font-size: 2.5vw;\\n  span {\\n    display: block;\\n    font-size: 5vw;\\n    &:hover {\\n      animation: \",\" 2s linear infinite;\\n    }\\n  }\\n\"])),rotationAni);var refreshPage=function refreshPage(){window.location.reload();};var ResultPage=function ResultPage(_ref){var _answer$,_answer$2,_answer$3,_answer$4,_answer$5;var result=_ref.result;var answer=useRecoilValue(answerState);return/*#__PURE__*/_jsxs(Container,{result:result,children:[/*#__PURE__*/_jsx(\"h1\",{children:result===STATUS.WIN?\"GOOD !!!\":\"So Close...\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"The Answer is...\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:(_answer$=answer[0])===null||_answer$===void 0?void 0:_answer$.toUpperCase()}),/*#__PURE__*/_jsx(\"span\",{children:(_answer$2=answer[1])===null||_answer$2===void 0?void 0:_answer$2.toUpperCase()}),/*#__PURE__*/_jsx(\"span\",{children:(_answer$3=answer[2])===null||_answer$3===void 0?void 0:_answer$3.toUpperCase()}),/*#__PURE__*/_jsx(\"span\",{children:(_answer$4=answer[3])===null||_answer$4===void 0?void 0:_answer$4.toUpperCase()}),/*#__PURE__*/_jsx(\"span\",{children:(_answer$5=answer[4])===null||_answer$5===void 0?void 0:_answer$5.toUpperCase()})]}),/*#__PURE__*/_jsxs(Button,{onClick:refreshPage,children:[/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faRotateRight})}),/*#__PURE__*/_jsx(\"p\",{children:\"Restart\"})]})]});};export default ResultPage;","map":{"version":3,"names":["styled","keyframes","STATUS","answerState","useRecoilValue","faRotateRight","FontAwesomeIcon","jsx","_jsx","jsxs","_jsxs","Container","div","_templateObject","_taggedTemplateLiteral","props","result","NOT_FINISHED","rotationAni","_templateObject2","Button","button","_templateObject3","refreshPage","window","location","reload","ResultPage","_ref","_answer$","_answer$2","_answer$3","_answer$4","_answer$5","answer","children","WIN","toUpperCase","onClick","icon"],"sources":["/Users/woody/Development/React-Project/wordle-typescript/src/ResultPage.tsx"],"sourcesContent":["import { styled, keyframes } from \"styled-components\";\nimport { IResult, STATUS, answerState } from \"./atoms\";\nimport { useRecoilValue } from \"recoil\";\nimport { faRotateRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Container = styled.div<IResult>`\n  background-color: rgba(0, 0, 0, 0.9);\n  top: ${(props) => (props.result === STATUS.NOT_FINISHED ? \"-100vh\" : 0)};\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  transition: top 1s ease-in-out;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  h1 {\n    font-size: 5vw;\n    margin-bottom: 3vw;\n  }\n  div {\n    display: flex;\n    span {\n      font-size: 7.5vw;\n      width: 7vw;\n      height: 7vw;\n      font-weight: 700;\n      margin-right: 1vw;\n      background-color: #539165;\n      text-align: center;\n      vertical-align: center;\n    }\n  }\n`;\n\nconst rotationAni = keyframes`\n  0% {transform: rotate(0deg)};\n  100% {transform: rotate(360deg)};\n`;\n\nconst Button = styled.button`\n  margin-top: 4vw;\n  border: none;\n  color: white;\n  background-color: transparent;\n  cursor: pointer;\n  font-size: 2.5vw;\n  span {\n    display: block;\n    font-size: 5vw;\n    &:hover {\n      animation: ${rotationAni} 2s linear infinite;\n    }\n  }\n`;\n\nconst refreshPage = () => {\n  window.location.reload();\n};\n\nconst ResultPage = ({ result }: IResult) => {\n  const answer = useRecoilValue(answerState);\n  return (\n    <Container result={result}>\n      <h1>{result === STATUS.WIN ? \"GOOD !!!\" : \"So Close...\"}</h1>\n      <h1>The Answer is...</h1>\n      <div>\n        <span>{answer[0]?.toUpperCase()}</span>\n        <span>{answer[1]?.toUpperCase()}</span>\n        <span>{answer[2]?.toUpperCase()}</span>\n        <span>{answer[3]?.toUpperCase()}</span>\n        <span>{answer[4]?.toUpperCase()}</span>\n      </div>\n      <Button onClick={refreshPage}>\n        <span>\n          <FontAwesomeIcon icon={faRotateRight}></FontAwesomeIcon>\n        </span>\n        <p>Restart</p>\n      </Button>\n    </Container>\n  );\n};\n\nexport default ResultPage;\n"],"mappings":"oNAAA,OAASA,MAAM,CAAEC,SAAS,KAAQ,mBAAmB,CACrD,OAAkBC,MAAM,CAAEC,WAAW,KAAQ,SAAS,CACtD,OAASC,cAAc,KAAQ,QAAQ,CACvC,OAASC,aAAa,KAAQ,mCAAmC,CACjE,OAASC,eAAe,KAAQ,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEjE,GAAM,CAAAC,SAAS,CAAGX,MAAM,CAACY,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,2kBAEnB,SAACC,KAAK,QAAM,CAAAA,KAAK,CAACC,MAAM,GAAKd,MAAM,CAACe,YAAY,CAAG,QAAQ,CAAG,CAAC,EAAC,CA2BxE,CAED,GAAM,CAAAC,WAAW,CAAGjB,SAAS,CAAAkB,gBAAA,GAAAA,gBAAA,CAAAL,sBAAA,gFAG5B,CAED,GAAM,CAAAM,MAAM,CAAGpB,MAAM,CAACqB,MAAM,CAAAC,gBAAA,GAAAA,gBAAA,CAAAR,sBAAA,oQAWTI,WAAW,CAG7B,CAED,GAAM,CAAAK,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACxBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAC1B,CAAC,CAED,GAAM,CAAAC,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAAC,IAAA,CAA4B,KAAAC,QAAA,CAAAC,SAAA,CAAAC,SAAA,CAAAC,SAAA,CAAAC,SAAA,IAAtB,CAAAjB,MAAM,CAAAY,IAAA,CAANZ,MAAM,CAC1B,GAAM,CAAAkB,MAAM,CAAG9B,cAAc,CAACD,WAAW,CAAC,CAC1C,mBACEO,KAAA,CAACC,SAAS,EAACK,MAAM,CAAEA,MAAO,CAAAmB,QAAA,eACxB3B,IAAA,OAAA2B,QAAA,CAAKnB,MAAM,GAAKd,MAAM,CAACkC,GAAG,CAAG,UAAU,CAAG,aAAa,CAAK,CAAC,cAC7D5B,IAAA,OAAA2B,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBzB,KAAA,QAAAyB,QAAA,eACE3B,IAAA,SAAA2B,QAAA,EAAAN,QAAA,CAAOK,MAAM,CAAC,CAAC,CAAC,UAAAL,QAAA,iBAATA,QAAA,CAAWQ,WAAW,CAAC,CAAC,CAAO,CAAC,cACvC7B,IAAA,SAAA2B,QAAA,EAAAL,SAAA,CAAOI,MAAM,CAAC,CAAC,CAAC,UAAAJ,SAAA,iBAATA,SAAA,CAAWO,WAAW,CAAC,CAAC,CAAO,CAAC,cACvC7B,IAAA,SAAA2B,QAAA,EAAAJ,SAAA,CAAOG,MAAM,CAAC,CAAC,CAAC,UAAAH,SAAA,iBAATA,SAAA,CAAWM,WAAW,CAAC,CAAC,CAAO,CAAC,cACvC7B,IAAA,SAAA2B,QAAA,EAAAH,SAAA,CAAOE,MAAM,CAAC,CAAC,CAAC,UAAAF,SAAA,iBAATA,SAAA,CAAWK,WAAW,CAAC,CAAC,CAAO,CAAC,cACvC7B,IAAA,SAAA2B,QAAA,EAAAF,SAAA,CAAOC,MAAM,CAAC,CAAC,CAAC,UAAAD,SAAA,iBAATA,SAAA,CAAWI,WAAW,CAAC,CAAC,CAAO,CAAC,EACpC,CAAC,cACN3B,KAAA,CAACU,MAAM,EAACkB,OAAO,CAAEf,WAAY,CAAAY,QAAA,eAC3B3B,IAAA,SAAA2B,QAAA,cACE3B,IAAA,CAACF,eAAe,EAACiC,IAAI,CAAElC,aAAc,CAAkB,CAAC,CACpD,CAAC,cACPG,IAAA,MAAA2B,QAAA,CAAG,SAAO,CAAG,CAAC,EACR,CAAC,EACA,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAR,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}