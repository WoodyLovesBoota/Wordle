{"ast":null,"code":"import _slicedToArray from\"/Users/woody/Development/React-Project/wordle-typescript/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{answerState,STATUS,isFinishState}from\"../atoms\";import{useRecoilValue,useSetRecoilState}from\"recoil\";import Letter from\"./Letter\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Word=function Word(){var answer=useRecoilValue(answerState);var _useState=useState([\"\",\"\",\"\",\"\",\"\"]),_useState2=_slicedToArray(_useState,2),colors=_useState2[0],setColors=_useState2[1];var setIsFinished=useSetRecoilState(isFinishState);var handleSubmit=function handleSubmit(event){checkIsAnswer(event);};var checkIsAnswer=function checkIsAnswer(event){var _event$currentTarget$;event.preventDefault();var checkArr=[];var res=[];var green=0;for(var i=0;i<5;i++){res.push(event.currentTarget[i].value);if(res[i]===answer[i]){green++;checkArr[i]=\"G\";}else if(answer.includes(res[i])){checkArr[i]=\"Y\";}else{checkArr[i]=\"B\";}}setColors(checkArr);green===5&&setIsFinished(STATUS.WIN);if(event.currentTarget.nextSibling!==null)(_event$currentTarget$=event.currentTarget.nextSibling.firstChild)===null||_event$currentTarget$===void 0?void 0:_event$currentTarget$.focus();else{green!==5&&setIsFinished(STATUS.LOSE);}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[colors.map(function(color,index){return/*#__PURE__*/_jsx(Letter,{bgcolor:color===\"G\"?\"#539165\":color===\"Y\"?\"#F7C04A\":color===\"B\"?\"gray\":\"#dcdde1\"},index);}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",style:{display:\"none\"}})]});};export default Word;","map":{"version":3,"names":["answerState","STATUS","isFinishState","useRecoilValue","useSetRecoilState","Letter","useState","jsx","_jsx","jsxs","_jsxs","Word","answer","_useState","_useState2","_slicedToArray","colors","setColors","setIsFinished","handleSubmit","event","checkIsAnswer","_event$currentTarget$","preventDefault","checkArr","res","green","i","push","currentTarget","value","includes","WIN","nextSibling","firstChild","focus","LOSE","onSubmit","children","map","color","index","bgcolor","type","style","display"],"sources":["/Users/woody/Development/React-Project/wordle-typescript/src/components/Word.tsx"],"sourcesContent":["import { answerState, STATUS, isFinishState } from \"../atoms\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport Letter from \"./Letter\";\nimport { useState } from \"react\";\n\nconst Word = () => {\n  const answer = useRecoilValue(answerState);\n  const [colors, setColors] = useState([\"\", \"\", \"\", \"\", \"\"]);\n  const setIsFinished = useSetRecoilState(isFinishState);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    checkIsAnswer(event);\n  };\n\n  const checkIsAnswer = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    let checkArr = [];\n    let res = [];\n    let green = 0;\n    for (let i = 0; i < 5; i++) {\n      res.push((event.currentTarget[i] as HTMLInputElement).value);\n      if (res[i] === answer[i]) {\n        green++;\n        checkArr[i] = \"G\";\n      } else if (answer.includes(res[i])) {\n        checkArr[i] = \"Y\";\n      } else {\n        checkArr[i] = \"B\";\n      }\n    }\n    setColors(checkArr);\n    green === 5 && setIsFinished(STATUS.WIN);\n    if (event.currentTarget.nextSibling !== null)\n      (event.currentTarget.nextSibling.firstChild as HTMLElement)?.focus();\n    else {\n      green !== 5 && setIsFinished(STATUS.LOSE);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {colors.map((color, index) => (\n        <Letter\n          key={index}\n          bgcolor={\n            color === \"G\"\n              ? \"#539165\"\n              : color === \"Y\"\n              ? \"#F7C04A\"\n              : color === \"B\"\n              ? \"gray\"\n              : \"#dcdde1\"\n          }\n        />\n      ))}\n      <button type=\"submit\" style={{ display: \"none\" }} />\n    </form>\n  );\n};\n\nexport default Word;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}