{"ast":null,"code":"var _jsxFileName = \"/Users/woody/Development/React-Project/wordle-typescript/src/ResultPage.tsx\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport { STATUS, answerState } from \"./atoms\";\nimport { useRecoilValue } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  background-color: rgba(0, 0, 0, 0.8);\n  top: ${props => props.result === STATUS.NOT_FINISHED ? \"-100vh\" : 0};\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  transition: top 1s ease-in-out;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  h1 {\n    font-size: 5vw;\n    margin-bottom: 3vw;\n  }\n  div {\n    display: flex;\n    span {\n      font-size: 7.5vw;\n      width: 7vw;\n      height: 7vw;\n      font-weight: 700;\n      margin-right: 1vw;\n      background-color: #539165;\n      text-align: center;\n      vertical-align: center;\n    }\n  }\n`;\n_c = Container;\nconst Button = styled.button`\n  margin-top: 4vw;\n  border: none;\n  color: white;\n  background-color: black;\n  cursor: pointer;\n  font-size: 2.5vw;\n  span {\n    display: block;\n    font-size: 5vw;\n    &:hover {\n      animation: ${rotationAni} 2s linear infinite;\n    }\n  }\n`;\nconst ResultPage = ({\n  result\n}) => {\n  _s();\n  const answer = useRecoilValue(answerState);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    result: result,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: result === STATUS.WIN ? \"GOOD !!!\" : \"So Close...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"The Answer is...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: answer[0].toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: answer[1].toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: answer[2].toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: answer[3].toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: answer[4].toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultPage, \"1yXsf1bxTHYx0P3lD5h0tBplEIg=\", false, function () {\n  return [useRecoilValue];\n});\n_c2 = ResultPage;\nexport default ResultPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ResultPage\");","map":{"version":3,"names":["styled","STATUS","answerState","useRecoilValue","jsxDEV","_jsxDEV","Container","div","props","result","NOT_FINISHED","_c","Button","button","rotationAni","ResultPage","_s","answer","children","WIN","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","_c2","$RefreshReg$"],"sources":["/Users/woody/Development/React-Project/wordle-typescript/src/ResultPage.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { IResult, STATUS, answerState } from \"./atoms\";\nimport { useRecoilValue } from \"recoil\";\n\nconst Container = styled.div<IResult>`\n  background-color: rgba(0, 0, 0, 0.8);\n  top: ${(props) => (props.result === STATUS.NOT_FINISHED ? \"-100vh\" : 0)};\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  transition: top 1s ease-in-out;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  h1 {\n    font-size: 5vw;\n    margin-bottom: 3vw;\n  }\n  div {\n    display: flex;\n    span {\n      font-size: 7.5vw;\n      width: 7vw;\n      height: 7vw;\n      font-weight: 700;\n      margin-right: 1vw;\n      background-color: #539165;\n      text-align: center;\n      vertical-align: center;\n    }\n  }\n`;\n\nconst Button = styled.button`\n  margin-top: 4vw;\n  border: none;\n  color: white;\n  background-color: black;\n  cursor: pointer;\n  font-size: 2.5vw;\n  span {\n    display: block;\n    font-size: 5vw;\n    &:hover {\n      animation: ${rotationAni} 2s linear infinite;\n    }\n  }\n`;\n\nconst ResultPage = ({ result }: IResult) => {\n  const answer = useRecoilValue(answerState);\n  return (\n    <Container result={result}>\n      <h1>{result === STATUS.WIN ? \"GOOD !!!\" : \"So Close...\"}</h1>\n      <h1>The Answer is...</h1>\n      <div>\n        <span>{answer[0].toUpperCase()}</span>\n        <span>{answer[1].toUpperCase()}</span>\n        <span>{answer[2].toUpperCase()}</span>\n        <span>{answer[3].toUpperCase()}</span>\n        <span>{answer[4].toUpperCase()}</span>\n      </div>\n    </Container>\n  );\n};\n\nexport default ResultPage;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SAAkBC,MAAM,EAAEC,WAAW,QAAQ,SAAS;AACtD,SAASC,cAAc,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAa;AACtC;AACA,SAAUC,KAAK,IAAMA,KAAK,CAACC,MAAM,KAAKR,MAAM,CAACS,YAAY,GAAG,QAAQ,GAAG,CAAG;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GA7BIL,SAAS;AA+Bf,MAAMM,MAAM,GAAGZ,MAAM,CAACa,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmBC,WAAY;AAC/B;AACA;AACA,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAC;EAAEN;AAAgB,CAAC,KAAK;EAAAO,EAAA;EAC1C,MAAMC,MAAM,GAAGd,cAAc,CAACD,WAAW,CAAC;EAC1C,oBACEG,OAAA,CAACC,SAAS;IAACG,MAAM,EAAEA,MAAO;IAAAS,QAAA,gBACxBb,OAAA;MAAAa,QAAA,EAAKT,MAAM,KAAKR,MAAM,CAACkB,GAAG,GAAG,UAAU,GAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7DlB,OAAA;MAAAa,QAAA,EAAI;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBlB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAOD,MAAM,CAAC,CAAC,CAAC,CAACO,WAAW,CAAC;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtClB,OAAA;QAAAa,QAAA,EAAOD,MAAM,CAAC,CAAC,CAAC,CAACO,WAAW,CAAC;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtClB,OAAA;QAAAa,QAAA,EAAOD,MAAM,CAAC,CAAC,CAAC,CAACO,WAAW,CAAC;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtClB,OAAA;QAAAa,QAAA,EAAOD,MAAM,CAAC,CAAC,CAAC,CAACO,WAAW,CAAC;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtClB,OAAA;QAAAa,QAAA,EAAOD,MAAM,CAAC,CAAC,CAAC,CAACO,WAAW,CAAC;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACP,EAAA,CAfID,UAAU;EAAA,QACCZ,cAAc;AAAA;AAAAsB,GAAA,GADzBV,UAAU;AAiBhB,eAAeA,UAAU;AAAC,IAAAJ,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}