{"ast":null,"code":"var _jsxFileName = \"/Users/woody/Development/React-Project/wordle-typescript/src/components/Word.tsx\",\n  _s = $RefreshSig$();\nimport { answerState, STATUS, isFinishState, historyState } from \"../atoms\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport Letter from \"./Letter\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Word = () => {\n  _s();\n  const answer = useRecoilValue(answerState);\n  const [colors, setColors] = useState([\"\", \"\", \"\", \"\", \"\"]);\n  const setIsFinished = useSetRecoilState(isFinishState);\n  const setHistory = useSetRecoilState(historyState);\n  const handleSubmit = event => {\n    checkIsAnswer(event);\n  };\n  const checkIsAnswer = event => {\n    var _event$currentTarget$, _event$currentTarget$2, _event$currentTarget$3;\n    event.preventDefault();\n    let checkArr = [];\n    let res = [];\n    let green = 0;\n    for (let i = 0; i < 5; i++) {\n      const currentValue = event.currentTarget[i].value;\n      res.push(currentValue);\n      setHistory(prev => [...prev, currentValue]);\n      if (res[i] === answer[i]) {\n        green++;\n        checkArr[i] = \"G\";\n      } else if (answer.includes(res[i])) {\n        checkArr[i] = \"Y\";\n      } else {\n        checkArr[i] = \"B\";\n      }\n    }\n    setColors(checkArr);\n    green === 5 && setIsFinished(STATUS.WIN);\n    (_event$currentTarget$ = event.currentTarget.nextSibling) === null || _event$currentTarget$ === void 0 ? void 0 : (_event$currentTarget$2 = _event$currentTarget$.firstChild) === null || _event$currentTarget$2 === void 0 ? void 0 : _event$currentTarget$2.focus();\n    ((_event$currentTarget$3 = event.currentTarget.nextSibling) === null || _event$currentTarget$3 === void 0 ? void 0 : _event$currentTarget$3.nodeName) === \"DIV\" && green !== 5 && setIsFinished(STATUS.LOSE);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [colors.map((color, index) => /*#__PURE__*/_jsxDEV(Letter, {\n      bgcolor: color === \"G\" ? \"#539165\" : color === \"Y\" ? \"#F7C04A\" : color === \"B\" ? \"gray\" : \"#dcdde1\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Word, \"4v90ih6DTuIw9jy7hnFSP9eeIvY=\", false, function () {\n  return [useRecoilValue, useSetRecoilState, useSetRecoilState];\n});\n_c = Word;\nexport default Word;\nvar _c;\n$RefreshReg$(_c, \"Word\");","map":{"version":3,"names":["answerState","STATUS","isFinishState","historyState","useRecoilValue","useSetRecoilState","Letter","useState","jsxDEV","_jsxDEV","Word","_s","answer","colors","setColors","setIsFinished","setHistory","handleSubmit","event","checkIsAnswer","_event$currentTarget$","_event$currentTarget$2","_event$currentTarget$3","preventDefault","checkArr","res","green","i","currentValue","currentTarget","value","push","prev","includes","WIN","nextSibling","firstChild","focus","nodeName","LOSE","onSubmit","children","map","color","index","bgcolor","fileName","_jsxFileName","lineNumber","columnNumber","type","style","display","_c","$RefreshReg$"],"sources":["/Users/woody/Development/React-Project/wordle-typescript/src/components/Word.tsx"],"sourcesContent":["import { answerState, STATUS, isFinishState, historyState } from \"../atoms\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport Letter from \"./Letter\";\nimport { useState } from \"react\";\n\nconst Word = () => {\n  const answer = useRecoilValue(answerState);\n  const [colors, setColors] = useState([\"\", \"\", \"\", \"\", \"\"]);\n  const setIsFinished = useSetRecoilState(isFinishState);\n  const setHistory = useSetRecoilState(historyState);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    checkIsAnswer(event);\n  };\n\n  const checkIsAnswer = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    let checkArr = [];\n    let res = [];\n    let green = 0;\n    for (let i = 0; i < 5; i++) {\n      const currentValue = (event.currentTarget[i] as HTMLInputElement).value;\n      res.push(currentValue);\n      setHistory((prev) => [...prev, currentValue]);\n      if (res[i] === answer[i]) {\n        green++;\n        checkArr[i] = \"G\";\n      } else if (answer.includes(res[i])) {\n        checkArr[i] = \"Y\";\n      } else {\n        checkArr[i] = \"B\";\n      }\n    }\n    setColors(checkArr);\n    green === 5 && setIsFinished(STATUS.WIN);\n    (event.currentTarget.nextSibling?.firstChild as HTMLElement)?.focus();\n    event.currentTarget.nextSibling?.nodeName === \"DIV\" &&\n      green !== 5 &&\n      setIsFinished(STATUS.LOSE);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {colors.map((color, index) => (\n        <Letter\n          key={index}\n          bgcolor={\n            color === \"G\"\n              ? \"#539165\"\n              : color === \"Y\"\n              ? \"#F7C04A\"\n              : color === \"B\"\n              ? \"gray\"\n              : \"#dcdde1\"\n          }\n        />\n      ))}\n      <button type=\"submit\" style={{ display: \"none\" }} />\n    </form>\n  );\n};\n\nexport default Word;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}