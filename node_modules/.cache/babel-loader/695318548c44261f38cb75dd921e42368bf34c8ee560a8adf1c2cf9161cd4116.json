{"ast":null,"code":"var _jsxFileName = \"/Users/woody/Development/React-Project/wordle-typescript/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Reset } from \"styled-reset\";\nimport { styled } from \"styled-components\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport Word from \"./components/Word\";\nimport { answerState, isFinishState } from \"./atoms\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport ResultPage from \"./ResultPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 5vh 0;\n`;\n_c = Container;\nfunction App() {\n  _s();\n  const setAnswer = useSetRecoilState(answerState);\n  const isFinished = useRecoilValue(isFinishState);\n  const getWord = async () => {\n    const {\n      data\n    } = await axios(\"https://random-word-api.herokuapp.com/word?length=5\");\n    setAnswer(data[0]);\n  };\n  useEffect(() => {\n    getWord();\n  }, []);\n  const words = [1, 2, 3, 4, 5, 6, 7];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Reset, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: words.map(element => {\n        return /*#__PURE__*/_jsxDEV(Word, {}, element, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultPage, {\n      result: isFinished\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"pHITLwW6jNQjxqJscH9xQFnJXkM=\", false, function () {\n  return [useSetRecoilState, useRecoilValue];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Reset","styled","axios","useEffect","Word","answerState","isFinishState","useRecoilValue","useSetRecoilState","ResultPage","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","App","_s","setAnswer","isFinished","getWord","data","words","children","fileName","_jsxFileName","lineNumber","columnNumber","map","element","result","_c2","$RefreshReg$"],"sources":["/Users/woody/Development/React-Project/wordle-typescript/src/App.tsx"],"sourcesContent":["import { Reset } from \"styled-reset\";\nimport { styled } from \"styled-components\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport Word from \"./components/Word\";\nimport { answerState, isFinishState } from \"./atoms\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport ResultPage from \"./ResultPage\";\nimport Keyboard from \"./components/Keyboard\";\n\nconst Container = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 5vh 0;\n`;\n\nfunction App() {\n  const setAnswer = useSetRecoilState(answerState);\n  const isFinished = useRecoilValue(isFinishState);\n\n  const getWord = async () => {\n    const { data } = await axios(\n      \"https://random-word-api.herokuapp.com/word?length=5\"\n    );\n    setAnswer(data[0]);\n  };\n\n  useEffect(() => {\n    getWord();\n  }, []);\n\n  const words = [1, 2, 3, 4, 5, 6, 7];\n\n  return (\n    <>\n      <Reset />\n      <Container>\n        {words.map((element) => {\n          return <Word key={element}></Word>;\n        })}\n        {/* <Keyboard /> */}\n      </Container>\n      <ResultPage result={isFinished} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,cAAc;AACpC,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAASC,WAAW,EAAEC,aAAa,QAAQ,SAAS;AACpD,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,QAAQ;AAC1D,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGtC,MAAMC,SAAS,GAAGb,MAAM,CAACc,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIF,SAAS;AASf,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,SAAS,GAAGX,iBAAiB,CAACH,WAAW,CAAC;EAChD,MAAMe,UAAU,GAAGb,cAAc,CAACD,aAAa,CAAC;EAEhD,MAAMe,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMpB,KAAK,CAC1B,qDACF,CAAC;IACDiB,SAAS,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdkB,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAEnC,oBACEZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA,CAACX,KAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACTjB,OAAA,CAACG,SAAS;MAAAU,QAAA,EACPD,KAAK,CAACM,GAAG,CAAEC,OAAO,IAAK;QACtB,oBAAOnB,OAAA,CAACP,IAAI,MAAM0B,OAAO;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MACpC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEO,CAAC,eACZjB,OAAA,CAACF,UAAU;MAACsB,MAAM,EAAEX;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAClC,CAAC;AAEP;AAACV,EAAA,CA7BQD,GAAG;EAAA,QACQT,iBAAiB,EAChBD,cAAc;AAAA;AAAAyB,GAAA,GAF1Bf,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}